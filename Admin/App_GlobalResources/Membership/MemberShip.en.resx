<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountSuccessfullyCreated" xml:space="preserve">
    <value>Your account successfully created</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Create user account</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChangingPasswordDone" xml:space="preserve">
    <value>Changing password done</value>
  </data>
  <data name="ChangingPasswordFaild" xml:space="preserve">
    <value>Changing password faild</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="ConfirmNewPassRequired" xml:space="preserve">
    <value>Confirm new password required</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPasswordError" xml:space="preserve">
    <value>Confirm password error</value>
  </data>
  <data name="CountryID" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Duplicate email</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>Duplicate user name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="InvalidAnswer" xml:space="preserve">
    <value>Invalid answer</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid password</value>
  </data>
  <data name="InvalidQuestion" xml:space="preserve">
    <value>Invalid question</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>Invalid user name</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginFailed" xml:space="preserve">
    <value>Login Failed</value>
  </data>
  <data name="ManagmentAccount" xml:space="preserve">
    <value>Managment account</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewAccount" xml:space="preserve">
    <value>New account</value>
  </data>
  <data name="NewPassRequired" xml:space="preserve">
    <value>New password required</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NewPasswordConfirmationError" xml:space="preserve">
    <value>New password confirmation error</value>
  </data>
  <data name="NewPasswordRequired" xml:space="preserve">
    <value>New password required</value>
  </data>
  <data name="Occupation" xml:space="preserve">
    <value>Occupation</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password required</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="SecurityAnswer" xml:space="preserve">
    <value>Security answer</value>
  </data>
  <data name="SecurityQuestion" xml:space="preserve">
    <value>Security question</value>
  </data>
  <data name="ShowAllSiteUsers" xml:space="preserve">
    <value>Showall site users</value>
  </data>
  <data name="SiteUsers" xml:space="preserve">
    <value>Site users</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Telephones" xml:space="preserve">
    <value>Telephones</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="UserRejected" xml:space="preserve">
    <value>User rejected</value>
  </data>
  <data name="AccountType" xml:space="preserve">
    <value>Account type</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="AddNewRole" xml:space="preserve">
    <value>Add new role</value>
  </data>
  <data name="NewRole" xml:space="preserve">
    <value>New role</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Role name</value>
  </data>
  <data name="SiteRoles" xml:space="preserve">
    <value>Site roles</value>
  </data>
  <data name="AccountSuccessfullyFailed" xml:space="preserve">
    <value>Sorry, an error occurred while creating your account, please try again</value>
  </data>
  <data name="ConfirmEmail" xml:space="preserve">
    <value>Email confirmation</value>
  </data>
  <data name="ConfirmEmailError" xml:space="preserve">
    <value>Email confirmation error</value>
  </data>
  <data name="AccountMailError" xml:space="preserve">
    <value>wrong e-mail</value>
  </data>
  <data name="UserNameNotFound" xml:space="preserve">
    <value>Username does not exist</value>
  </data>
  <data name="YourAccountData" xml:space="preserve">
    <value>Your account data</value>
  </data>
  <data name="YourPasswordSent" xml:space="preserve">
    <value>Sent successfully</value>
  </data>
  <data name="UpdatingDataError" xml:space="preserve">
    <value>Error in the updating process</value>
  </data>
  <data name="YourAccountDataChangedSuccessfuly" xml:space="preserve">
    <value>Modify your account information has been successfully</value>
  </data>
  <data name="RetrivePassword" xml:space="preserve">
    <value>Retrive my password</value>
  </data>
  <data name="ActiveateAccount" xml:space="preserve">
    <value>Account Activation</value>
  </data>
  <data name="ActiveateAccountDone" xml:space="preserve">
    <value>The account was activated successfully</value>
  </data>
  <data name="ActiveateAccountFailed" xml:space="preserve">
    <value>Failed to activate the account, please try again soon</value>
  </data>
  <data name="ForgetPassword" xml:space="preserve">
    <value>Forgot your password ?</value>
  </data>
  <data name="InvalidCurrentPassword" xml:space="preserve">
    <value>Password is wrong</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
</root>